to fix/add:

antispam - 'antispam':{'enabled':True, 'quiet':False, 'agressiveness':1, 'bonuslength':100, 'duration':900}
channel configuration (antispam) - copy from chanserv to sayhooks

update chanserv to check if user is in database before performing actions
loading and saving of channels from sql; proper syncing of everything to the sql database

renames - go through battle bans, channel users, etc and update them on rename - would be much preferred to use userids internally. - use a userid object? findUserID(username) on every incoming and autoresolve to username on outgoing :D


after release:
offerfile updating

new protocol with "newprotocol" in lobby name/version - poll lobby developers for alternatives
quietness? (whether to print sayhooks actions)
maybe still send quiet actions to admins/owner
deny commands and raise errors for invalid args, saying "talk to your lobby dev"?

web interface:
php wrapper with https login
instead of using LOGIN, use WEBLOGIN

webinterface returns raw html

could also use mod_proxy and run another open port.

thoughts:

LAN mode can be SQLite with autoregistration?

outgoing protocol class too - useful for abstracting protocol version differences.

ability to pull updates from trusted servers

use a mutex on every loop if there's a problem

default user state for channels :D << allows "moderated" channels
logging in when banned throws you hidden into a #banned channel

multiple protocol support
track disconnected clients since the last command they sent - resend all data from that point.
ability to host multiple battles simultaneously if you have a bot tag
move battle ingame notification from host's ingame status to an updatebattleinfo param

insane amounts of stats - maybe through a separate sql db and a bot

separate in-battle map sync and map download percentage
make a unit test for sql, run it through sqlite
