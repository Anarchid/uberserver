should be fixed:
ingame time is broken

latest:
make everything configurable through DataHandler/_root and command-line options/config file
reloading <-- needs fixed. see above
transfer of ownership
channel registering (set owner)
working SQLite -- integrate SQLUsers.py and DataHandler.py << just force single thread
mods the power to check account registration dates, also needs registration date saved in db

go case-insensitive to do easier name checking
make renaming to a different case of the same name possible - nevermind, you can just log in as any form of your name ^_^
don't cater to scunthorpe (match swear words on registration and rename)

locked channels hidden by default (hide, show, lock) -- locked channels are hidden from CHANNELS (/list)

to fix/add:

user agreement (lol)

antispam - 'antispam':{'enabled':True, 'quiet':False, 'agressiveness':1, 'bonuslength':100, 'duration':900}

renames - go through battle bans, channel users, etc and update them on rename - would be much preferred to use userids internally.
update chanserv to check if user is in database before performing actions

chanserv -- finish commands, make them all work and compliant with existing chanserv
channel configuration (antispam)
quietness? (whether to print sayhooks actions)
maybe send things to admins/owner

loading and saving of channels from sql
fix ghosting, instead of ghosting, resend login data properly?

ban controls, at least in client

final todo: should be indistinguishable from tasserver to the untrained eye upon initial deployment


web interface:
php wrapper with https login
instead of using LOGIN, use WEBLOGIN

webinterface returns raw html

thoughts:

use a mutex on every loop if there's a problem

default user state for channels :D << allows "moderated" channels
logging in when banned throws you hidden into a #banned channel

multiple protocol support
track disconnected clients since the last command they sent - resend all data from that point.
ability to host multiple battles simultaneously if you have a bot tag
move battle ingame notification from host's ingame status to an updatebattleinfo param

insane amounts of stats - maybe through a separate sql db and a bot

separate in-battle map sync and map download percentage
make a unit test for sql, run it through sqlite
